[
	{
		"name": "&lt;canvas&gt;",
		"desc": "The HTML &lt;canvas&gt; Element can be used to draw graphics via scripting (usually JavaScript). For example, it can be used to draw graphs, make photo compositions or even perform animations. You may (and should) provide alternate content inside the &lt;canvas&gt; block. That content will be rendered both on older browsers that don't support canvas and in browsers with JavaScript disabled.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas"
	},
	{
		"name": "fillRect(x, y, width, height)",
		"desc": "The CanvasRenderingContext2D.fillRect() method of the Canvas 2D API draws a filled rectangle at (x, y) position whose size is determined by width and height and whose style is determined by the fillStyle attribute.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect"
	},
	{
		"name": "strokeRect(x, y, width, height)",
		"desc": "The CanvasRenderingContext2D.strokeRect() method of the Canvas 2D API paints a rectangle which has a starting point at (x, y) and has a w width and an h height onto the canvas, using the current stroke style.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect"
	},
	{
		"name": "clearRect(x, y, width, height)",
		"desc": "The CanvasRenderingContext2D.clearRect() method of the Canvas 2D API sets all pixels in the rectangle defined by starting point (x, y) and size (width, height) to transparent black, erasing any previously drawn content.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect"
	},
	{
		"name": "beginPath()",
		"desc": "The CanvasRenderingContext2D.beginPath() method of the Canvas 2D API starts a new path by emptying the list of sub-paths. Call this method when you want to create a new path.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath"
	},
	{
		"name": "closePath()",
		"desc": "The CanvasRenderingContext2D.closePath() method of the Canvas 2D API causes the point of the pen to move back to the start of the current sub-path. It tries to add a straight line (but does not actually draw it) from the current point to the start. If the shape has already been closed or has only one point, this function does nothing.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/closePath"
	},
	{
		"name": "stroke()",
		"desc": "The CanvasRenderingContext2D.stroke() method of the Canvas 2D API strokes the current or given path with the current stroke style using the non-zero winding rule.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/stroke"
	},
	{
		"name": "fill()",
		"desc": "The CanvasRenderingContext2D.fill() method of the Canvas 2D API fills the current or given path with the current fill style using the non-zero or even-odd winding rule.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fill"
	},
	{
		"name": "moveTo(x, y)",
		"desc": "The CanvasRenderingContext2D.moveTo() method of the Canvas 2D API moves the starting point of a new sub-path to the (x, y) coordinates.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo"
	},
	{
		"name": "lineTo(x, y)",
		"desc": "The CanvasRenderingContext2D.lineTo() method of the Canvas 2D API connects the last point in the sub-path to the x, y coordinates with a straight line (but does not actually draw it).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo"
	},
	{
		"name": "arc(x, y, radius, startAngle, endAngle, anticlockwise)",
		"desc": "The CanvasRenderingContext2D.arc() method of the Canvas 2D API adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo"
	},
	{
		"name": "quadraticCurveTo(cp1x, cp1y, x, y)",
		"desc": "The CanvasRenderingContext2D.quadraticCurveTo() method of the Canvas 2D API adds a quadratic Bézier curve to the path. It requires two points. The first point is a control point and the second one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the quadratic Bézier curve.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo"
	},
	{
		"name": "bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)",
		"desc": "The CanvasRenderingContext2D.bezierCurveTo() method of the Canvas 2D API adds a cubic Bézier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using moveTo() before creating the Bézier curve.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo"
	},
	{
		"name": "rect(x, y, width, height)",
		"desc": "The CanvasRenderingContext2D.rect() method of the Canvas 2D API creates a path for a rectangle at position (x, y) with a size that is determined by width and height. Those four points are connected by straight lines and the sub-path is marked as closed, so that you can fill or stroke this rectangle.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rect"
	},
	{
		"name": "Path2D()",
		"desc": "The Path2D() constructor returns a newly instantiated Path2D object, optionally with another path as an argument (creates a copy), or optionally with a string consisting of SVG path data.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/Path2D/Path2D"
	},
	{
		"name": "Path2D.addPath(path [, transform])",
		"desc": "The Path2D.addPath() method of the Canvas 2D API adds to the path the path given by the argument.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/Path2D/addPath"
	},
	{
		"name": "fillStyle = color",
		"desc": "The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API specifies the color or style to use inside shapes. The default is #000 (black).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle"
	},
	{
		"name": "strokeStyle = color",
		"desc": "The CanvasRenderingContext2D.strokeStyle property of the Canvas 2D API specifies the color or style to use for the lines around shapes. The default is #000 (black).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle"
	},
	{
		"name": "globalAlpha = transparencyValue",
		"desc": "The CanvasRenderingContext2D.globalAlpha property of the Canvas 2D API specifies the alpha value that is applied to shapes and images before they are drawn onto the canvas. The value is in the range from 0.0 (fully transparent) to 1.0 (fully opaque).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha"
	},
	{
		"name": "help",
		"desc": "Type a keyword on console and press enter to get search result.<br>Your keyword length should be 3 or more.<br>If it shows that your query was not found then try again.<br>",
		"url": "index.html"
	},
	{
		"name": "lineWidth = value",
		"desc": "The CanvasRenderingContext2D.lineWidth property of the Canvas 2D API sets the thickness of lines in space units. When getting, it returns the current value (1.0 by default). When setting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth"
	},
	{
		"name": "lineCap = type",
		"desc": "The CanvasRenderingContext2D.lineCap property of the Canvas 2D API determines how the end points of every line are drawn. There are three possible values for this property and those are: butt, round and square. By default this property is set to butt.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap"
	},
	{
		"name": "lineJoin = type",
		"desc": "The CanvasRenderingContext2D.lineJoin property of the Canvas 2D API determines how two connecting segments (of lines, arcs or curves) with non-zero lengths in a shape are joined together (degenerate segments with zero lengths, whose specified endpoints and control points are exactly at the same position, are skipped).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin"
	},
	{
		"name": "miterLimit = value",
		"desc": "The CanvasRenderingContext2D.miterLimit property of the Canvas 2D API sets the miter limit ratio in space units. When getting, it returns the current value (10.0 by default). When setting, zero, negative, Infinity and NaN values are ignored; otherwise the current value is set to the new value.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/miterLimit"
	},
	{
		"name": "getLineDash()",
		"desc": "The CanvasRenderingContext2D.getLineDash() method of the Canvas 2D API gets the current line dash pattern.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash"
	},
	{
		"name": "setLineDash(segments)",
		"desc": "The CanvasRenderingContext2D.setLineDash() method of the Canvas 2D API sets the line dash pattern.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash"
	},
	{
		"name": "lineDashOffset = value",
		"desc": "The CanvasRenderingContext2D.lineDashOffset property of the Canvas 2D API sets the line dash pattern offset or \"phase\" to achieve a \"marching ants\" effect, for example.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset"
	},
	{
		"name": "createLinearGradient(x1, y1, x2, y2)",
		"desc": "The CanvasRenderingContext2D.createLinearGradient() method of the Canvas 2D API creates a gradient along the line given by the coordinates represented by the parameters. This method returns a linear CanvasGradient.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createLinearGradient"
	},
	{
		"name": "createRadialGradient(x1, y1, r1, x2, y2, r2)",
		"desc": "The CanvasRenderingContext2D.createRadialGradient() method of the Canvas 2D API creates a radial gradient given by the coordinates of the two circles represented by the parameters. This method returns a CanvasGradient.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient"
	},
	{
		"name": "gradient.addColorStop(position, color)",
		"desc": "The CanvasGradient.addColorStop() method adds a new stop, defined by an offset and a color, to the gradient. If the offset is not between 0 and 1, an INDEX_SIZE_ERR is raised, if the color can't be parsed as a CSS <color>, a SYNTAX_ERR is raised.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient/addColorStop"
	},
	{
		"name": "createPattern(image, type)",
		"desc": "The CanvasRenderingContext2D.createPattern() method of the Canvas 2D API creates a pattern using the specified image (a CanvasImageSource). It repeats the source in the directions specified by the repetition argument. This method returns a CanvasPattern.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/createPattern"
	},
	{
		"name": "shadowOffsetX = float",
		"desc": "The CanvasRenderingContext2D.shadowOffsetX property of the Canvas 2D API specifies the distance that the shadow will be offset in horizontal distance.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX"
	},
	{
		"name": "shadowOffsetY = float",
		"desc": "The CanvasRenderingContext2D.shadowOffsetY property of the Canvas 2D API specifies the distance that the shadow will be offset in vertical distance.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY"
	},
	{
		"name": "shadowBlur = float",
		"desc": "The CanvasRenderingContext2D.shadowBlur property of the Canvas 2D API specifies the level of the blurring effect; this value doesn't correspond to a number of pixels and is not affected by the current transformation matrix. The default value is 0.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur"
	},
	{
		"name": "shadowColor = color",
		"desc": "The CanvasRenderingContext2D.shadowColor property of the Canvas 2D API specifies the color of the shadow.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor"
	},
	{
		"name": "save()",
		"desc": "The CanvasRenderingContext2D.save() method of the Canvas 2D API saves the entire state of the canvas by pushing the current state onto a stack.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/save"
	},
	{
		"name": "restore()",
		"desc": "The CanvasRenderingContext2D.restore() method of the Canvas 2D API restores the most recently saved canvas state by popping the top entry in the drawing state stack. If there is no saved state, this method does nothing.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/restore"
	},
	{
		"name": "strokeStyle",
		"desc": "The CanvasRenderingContext2D.strokeStyle property of the Canvas 2D API specifies the color or style to use for the lines around shapes. The default is #000 (black).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle"
	},
	{
		"name": "translate(x, y)",
		"desc": "The CanvasRenderingContext2D.translate() method of the Canvas 2D API adds a translation transformation by moving the canvas and its origin x horizontally and y vertically on the grid.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/translate"
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	},
	{
		"name": "",
		"desc": "",
		"url": ""
	}


]
